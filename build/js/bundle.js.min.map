{"version":3,"sources":["app.js"],"names":["keyWords","e","i","a","o","u","App","handleText","handleTextArea","copyOutputText","botonEncriptar","document","querySelector","botonDesencriptar","addEventListener","textoEntrada","value","validarEntrada","encrypText","clearEntries","clearAlerts","decryptText","trim","test","showAlerts","mensaje","inputMessage","parMessage","innerHTML","classList","add","showText","split","map","letra","join","text","outputContenido","parEncrypt","textContent","handleOutputElements","remove","textArea","window","innerWidth","style","height","Math","max","scrollHeight","navigator","clipboard","writeText","parMessageHelp","contains","key","replaceAll"],"mappings":"AAAA,MAAAA,SAAA,CACAC,EAAA,QACAC,EAAA,OACAC,EAAA,KACAC,EAAA,OACAC,EAAA,QAOA,SAAAC,MACAC,aACAC,iBACAC,iBAGA,SAAAF,aACA,MAAAG,EAAAC,SAAAC,cAAA,kBACAC,EAAAF,SAAAC,cAAA,qBAEAF,EAAAI,iBAAA,QAAA,KACA,MAAAC,EAAAJ,SAAAC,cAAA,eAAAI,MAEAC,eAAAF,KACAG,WAAAH,GACAI,eACAC,iBAIAP,EAAAC,iBAAA,QAAA,KACA,MAAAC,EAAAJ,SAAAC,cAAA,eAAAI,MAEAC,eAAAF,KACAM,YAAAN,GACAI,eACAC,iBAKA,SAAAH,eAAAF,GAMA,UAFAA,EAAAA,EAAAO,SAHA,QAKAC,KAAAR,IAJA,kBAIAQ,KAAAR,MACAS,WAAAT,EAAA,GAAA,wEACA,GAMA,SAAAS,WAAAC,GACA,MAAAC,EAAAf,SAAAC,cAAA,kBACAe,EAAAhB,SAAAC,cAAA,UAEAa,EAGAE,IAAAD,EAAAE,WAAA,yEAAAH,SAFAd,SAAAC,cAAA,SAAAiB,UAAAC,IAAA,SAMA,SAAAZ,WAAAH,GACAgB,SAAAhB,EAAAiB,MAAA,IAAAC,IAAAC,GAAAlC,SAAAkC,IAAAA,GAAAC,KAAA,KAGA,SAAAJ,SAAAK,GACA,MAAAC,EAAA1B,SAAAC,cAAA,qBACA0B,EAAA3B,SAAAC,cAAA,iBAEA0B,GAQAA,EAAAC,YAAAH,EACAI,qBAAAH,KARAA,EAAAT,WAAA,uFAEAQ,sCAGAI,qBAAAH,IAOA,SAAAG,uBACA7B,SAAAC,cAAA,gBAAAiB,UAAAC,IAAA,UACAnB,SAAAC,cAAA,iBAAAiB,UAAAC,IAAA,UACAnB,SAAAC,cAAA,iBAAAiB,UAAAY,OAAA,UAGA,SAAAjC,iBAEA,MAAAkC,EAAA/B,SAAAC,cAAA,eAGA+B,OAAA7B,iBAAA,UAAA,WAEA6B,OAAAC,YAAA,IAEAF,EAAAG,MAAAC,OAAA,SAGAJ,EAAAG,MAAAC,OAAA,OACAJ,EAAAG,MAAAC,OAAAC,KAAAC,IAAAN,EAAAO,aAAA,KAAA,SAKAP,EAAA5B,iBAAA,SAAA,WAEA6B,OAAAC,YAAA,MAKAF,EAAAG,MAAAC,OAAA,OACAJ,EAAAG,MAAAC,OAAAC,KAAAC,IAAAN,EAAAO,aAAA,KAAA,SAKA,SAAA9B,eACAR,SAAAC,cAAA,eACAI,MAAA,GAGA,SAAAP,iBAEAE,SAAAC,cAAA,iBAEAE,iBAAA,SAAA,WACA,MAAAwB,EAAA3B,SAAAC,cAAA,iBACAsC,UAAAC,UAAAC,UAAAd,EAAAC,gBAKA,SAAAnB,cACA,MAAAiC,EAAA1C,SAAAC,cAAA,SACAe,EAAAhB,SAAAC,cAAA,UAEAe,GAAAA,EAAAc,SAEAY,EAAAxB,UAAAyB,SAAA,UAAAD,EAAAxB,UAAAY,OAAA,SAKA,SAAApB,YAAAN,GAEA,IAAA,MAAAwC,KAAAvD,SACAe,EAAAA,EAAAyC,WAAAxD,SAAAuD,GAAAA,GAGAxB,SAAAhB,GAvJAJ,SAAAG,iBAAA,oBAAA,WACAR","file":"bundle.js","sourcesContent":["const keyWords = {\r\n    \"e\": \"enter\",\r\n    \"i\": \"imes\",\r\n    \"a\": \"ai\",\r\n    \"o\": \"ober\",\r\n    \"u\": \"ufat\",\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    App();\r\n});\r\n\r\nfunction App(){\r\n    handleText();\r\n    handleTextArea();\r\n    copyOutputText();\r\n}\r\n\r\nfunction handleText(){\r\n    const botonEncriptar = document.querySelector('.btn-encriptar');\r\n    const botonDesencriptar = document.querySelector('.btn-desencriptar');\r\n    \r\n    botonEncriptar.addEventListener('click', () => {\r\n        const textoEntrada = document.querySelector('.input-text').value;\r\n\r\n        if (validarEntrada(textoEntrada) ){\r\n            encrypText(textoEntrada);\r\n            clearEntries();\r\n            clearAlerts();\r\n        }\r\n    });\r\n\r\n    botonDesencriptar.addEventListener('click', () => {\r\n        const textoEntrada = document.querySelector('.input-text').value;\r\n        \r\n        if (validarEntrada(textoEntrada)){\r\n            decryptText(textoEntrada);\r\n            clearEntries();\r\n            clearAlerts();\r\n        }\r\n    });\r\n}\r\n\r\nfunction validarEntrada(textoEntrada){\r\n    const exMayusculas = /[A-Z]/;\r\n    const exAsentos = /[\\u00E0-\\u00FF]/;\r\n\r\n    textoEntrada = textoEntrada.trim();\r\n\r\n    if ( !textoEntrada || exMayusculas.test(textoEntrada) || exAsentos.test(textoEntrada) ) {\r\n        showAlerts(textoEntrada ? '' : 'No se puede encriptar un texto vacio, porfavor intentelo nuevamente');\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction showAlerts( mensaje ){\r\n    const inputMessage = document.querySelector('.input-mensaje');\r\n    const parMessage = document.querySelector('.vacio');\r\n\r\n    if (!mensaje){\r\n        document.querySelector('.help').classList.add('error');\r\n    } else {\r\n        if (!parMessage) inputMessage.innerHTML += `<p class=\"vacio error\"><i class=\"fa-solid fa-circle-exclamation\"></i> ${mensaje}</p>`;\r\n    }\r\n}\r\n\r\nfunction encrypText(textoEntrada){    \r\n    showText(textoEntrada.split(\"\").map( letra => keyWords[letra] || letra ).join(\"\"));\r\n}\r\n\r\nfunction showText(text){\r\n    const outputContenido = document.querySelector('.output-contenido');\r\n    const parEncrypt = document.querySelector('.text-encrypt');\r\n\r\n    if (!parEncrypt) {\r\n        outputContenido.innerHTML += `\r\n            <div class=\"output-encrypt\">\r\n                <p class=\"text-encrypt\">${text}</p>\r\n            </div>\r\n        `;\r\n        handleOutputElements(outputContenido);\r\n    } else {\r\n        parEncrypt.textContent = text;\r\n        handleOutputElements(outputContenido);\r\n    }\r\n}\r\n\r\nfunction handleOutputElements() {\r\n    document.querySelector('.output-logo').classList.add('oculto');\r\n    document.querySelector('.output-texto').classList.add('oculto');\r\n    document.querySelector('.output-boton').classList.remove('oculto');\r\n}\r\n\r\nfunction handleTextArea() {\r\n    // Seleccionar el elemento textarea\r\n    const textArea = document.querySelector(\".input-text\");\r\n  \r\n    // Escuchar el evento \"resize\" de la ventana\r\n    window.addEventListener(\"resize\", function() {\r\n      // Verificar si la resolución actual es de escritorio (ancho de ventana mayor o igual a 992px)\r\n      if (window.innerWidth >= 992) {\r\n        // Asignar un tamaño fijo de 400 píxeles de alto al textarea\r\n        textArea.style.height = \"400px\";\r\n      } else {\r\n        // Actualizar el tamaño del textarea para que se ajuste a su contenido\r\n        textArea.style.height = \"auto\";\r\n        textArea.style.height = Math.max(textArea.scrollHeight, 400) + \"px\";\r\n      }\r\n    });\r\n  \r\n    // Escuchar el evento \"input\" del textarea\r\n    textArea.addEventListener(\"input\", function() {\r\n      // Verificar si la resolución actual es de escritorio (ancho de ventana mayor o igual a 992px)\r\n      if (window.innerWidth >= 992) {\r\n        // No hacer nada\r\n        return;\r\n      } else {\r\n        // Actualizar el tamaño del textarea para que se ajuste a su contenido o sea de un mínimo de 400 píxeles de alto\r\n        textArea.style.height = \"auto\";\r\n        textArea.style.height = Math.max(textArea.scrollHeight, 400) + \"px\";\r\n      }\r\n    });\r\n  }\r\n\r\nfunction clearEntries(){\r\n    const textArea = document.querySelector('.input-text');\r\n    textArea.value = \"\";\r\n}\r\n\r\nfunction copyOutputText(){\r\n\r\n    const botonCopiar = document.querySelector('.boton-copiar');\r\n\r\n    botonCopiar.addEventListener('click', function() {\r\n        const parEncrypt = document.querySelector('.text-encrypt');\r\n        navigator.clipboard.writeText(parEncrypt.textContent)\r\n    });\r\n    \r\n}\r\n\r\nfunction clearAlerts(){\r\n    const parMessageHelp = document.querySelector('.help');\r\n    const parMessage = document.querySelector('.vacio');\r\n\r\n    if ( parMessage ) parMessage.remove();\r\n\r\n    if ( parMessageHelp.classList.contains('error') ) parMessageHelp.classList.remove('error');\r\n\r\n    return;\r\n}\r\n\r\nfunction decryptText(textoEntrada){\r\n\r\n    for (const key in keyWords ) {\r\n        textoEntrada = textoEntrada.replaceAll( keyWords[key], key );\r\n    }\r\n\r\n    showText(textoEntrada);\r\n}"]}